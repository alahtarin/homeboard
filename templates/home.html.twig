{% extends 'base.html.twig' %}

{% block body %}
	<div class="row">
		<div class="col-md-6 col-sm-12 mb-3">
            <div class="card">
                <div class="card-header">
                    Relax alarms
                </div>
                <div class="card-body">
                    <p class="card-text">Select the desired timing for the relax alarms</p>
                    <form>
                        <div class="row">
                            <div class="col-md-3 col-sm-6 col-12 alarm-wrap"><input type="text" class="form-control form-control-sm alarm" placeholder="Slot 1" value="00:10"></div>
                            <div class="col-md-3 col-sm-6 col-12 alarm-wrap"><input type="text" class="form-control form-control-sm alarm" placeholder="Slot 2" value="19:35"></div>
                            <div class="col-md-3 col-sm-6 col-12 alarm-wrap"><input type="text" class="form-control form-control-sm alarm" placeholder="Slot 3" value="14:00"></div>
                            <div class="col-md-3 col-sm-6 col-12 alarm-wrap"><input type="text" class="form-control form-control-sm alarm" placeholder="Slot 4" value="15:30"></div>
                            <div class="col-md-3 col-sm-6 col-12 alarm-wrap"><input type="text" class="form-control form-control-sm alarm" placeholder="Slot 5" value="17:00"></div>
                            <div class="col-md-3 col-sm-6 col-12 alarm-wrap"><input type="text" class="form-control form-control-sm alarm" placeholder="Slot 6" value=""></div>
                            <div class="col-md-3 col-sm-6 col-12 alarm-wrap"><input type="text" class="form-control form-control-sm alarm" placeholder="Slot 7" value=""></div>
                            <div class="col-md-3 col-sm-6 col-12 alarm-wrap"><input type="text" class="form-control form-control-sm alarm" placeholder="Slot 8" value=""></div>
                        </div>
                    </form>
                </div>
                <div class="card-footer">
                    <small class="text-muted" id="next-alarm"></small>
                </div>
            </div>
		</div>
        <div class="col-md-6 col-sm-12 mb-3">
            <div class="card">
                <div class="card-header">
                    Targets for today
                </div>
                <div class="card-body">
                    <p class="card-text">Click on the targets that have been accomplished today</p>
                    {% for targetType, target in targets %}
                        {% if target.completed %}
                            <button class="btn btn-success today-target" disabled data-type="{{ targetType }}">{{ target.name }}</button>
                        {% else %}
                            <button class="btn btn-secondary today-target" data-type="{{ targetType }}">{{ target.name }}</button>
                        {% endif %}
                    {% endfor %}
                </div>
                <div class="card-footer">
                    <small class="text-muted" id="targets-left"></small>
                </div>
            </div>
        </div>
	</div>
{% endblock %}

{% block javascript %}
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js" integrity="sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js" integrity="sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ" crossorigin="anonymous"></script>

	<script>
		var messageCounter = 0;
		function log(message) {
			console.log("#" + ++messageCounter + ": " + message);
		}

		class Alarm {
			constructor(hours, minutes) {
				this.hours = parseInt(hours);
				this.minutes = parseInt(minutes);

				log("New alarm at " + this.hours + ":" + this.minutes);
			}

			tick(now) {
				if (now.getHours() == this.hours && now.getMinutes() == this.minutes && now.getSeconds() < 1) {
					alert('Time to rest, Alex');
				}
			}

			minutesLeft(now) {
				var nextHours = now.getHours();
				var nextMinutes = now.getMinutes();

				if (nextHours == this.hours && nextMinutes == this.minutes) {
						return 0;
				}

				if (this.hours < nextHours || this.hours == nextHours && this.minutes < nextMinutes) {
					return (24 - (nextHours - this.hours)) * 60 - (nextMinutes - this.minutes);

				}

				return (this.hours - nextHours) * 60 - (nextMinutes - this.minutes)
			}
		}

        var targetsCount;

		$(document).ready(function() {
            initAlarms();
            targetsCount = $('button.today-target:not([disabled])').length;
			$(document).on('change', 'input.alarm', initAlarms);
            initTargets();
		});

        function initTargets() {
            $('button.today-target').on('click', function() {
                var $target = $(this);
                if ($target.attr('disabled')) {
                    return false;
                }

                $target.removeClass('btn-secondary').addClass('btn-success').attr('disabled', true);
                targetsCount--;
                refreshTargetsFooter();
            });

            refreshTargetsFooter();
        }

        function refreshTargetsFooter() {
            if (targetsCount == 0) {
                $('#targets-left').text('No more tasks for today');
            } else {
                $('#targets-left').text(targetsCount + ' tasks remaining today');
            }
        }

		function initAlarms() {
			alarms = [];
			$('input.alarm').each(function(i, e) {
				[hours, minutes] = e.value.split(':');

				if (isNaN(parseInt(hours)) || isNaN(parseInt(minutes))) {
					return;
				}

				alarm = new Alarm(hours, minutes);
				alarms.push(alarm);

			});

			setInterval(checkAlarms, 1000);
            checkAlarms();
		}

        function checkAlarms() {
            var now = new Date();
            var minEta = 99999;
            alarms.forEach(function(alarm) {
                var eta = alarm.minutesLeft(now);
                if (eta == 0) {
                    if (now.getSeconds() < 1) {
                        alert('Time to rest, Alex');
                    }
                } else {
                    minEta = Math.min(eta, minEta);
                }

                $nextAlarm = $("#next-alarm");
                if (minEta == 1) {
                    $nextAlarm.text("Next alarm in a minute");
                } else if (minEta < 60) {
                    $nextAlarm.text("Next alarm in " + minEta + " minutes");
                } else {
                    hoursLeft = parseInt(minEta / 60);
                    $nextAlarm.text("Next alarm in " + (hoursLeft == 1 ? "one hour" : (hoursLeft + " hours")));
                }
            });
        }
	</script>
{% endblock %}
